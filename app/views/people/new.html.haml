#new_person
  %h1= t('people.new.title', :organization => SETTINGS['organization']['name'] ) 
  - if request.post?
    = render 'form'
    = link_to t('button.back'), people_path
  -else
    .search
      %h2= t('people.new.search_network')
      - if current_user.authentications.searchable.blank?
        %p= t('people.new.no_service_linked')
        %ul.auth_providers
          - %w(twitter facebook linked_in).each do |provider|
            %li= link_to t('people.new.add_provider', :provider => OmniAuth::Utils.camelize(provider)), "/auth/#{provider}", :class => provider
      - else
        = form_tag new_person_path, :method => :get do
          .networks
            %strong= t('people.new.search_using')
            - current_user.authentications.searchable.each do |auth|
              - check_box_name = "authentications[#{auth.id}]"
              = check_box_tag check_box_name, '1', params[:authentications].present? ? params[:authentications][auth.id.to_s] : true
              = label_tag check_box_name, auth_label(auth)
          = text_field_tag(:q, params[:q])
          = submit_tag(t('people.button.search'))
        - if @rate_limit_status.present?
          = t('people.new.calls_remaining', :count => @rate_limit_status.remaining_hits.to_i)
          = t('people.new.limit_reset_time', :time => distance_of_time_in_words(Time.now, Time.parse(@rate_limit_status.reset_time)))


      - if @found_people.present?
        %ul#people_search_results.resource_list.people
          - @found_people.each do |person|
            %li{:class => [person.new_record? ? person.imported_from_provider : 'existing']}
              - if (photo_url = person.photo_import_url || person.photo.url).present?
                .avatar
                  %img{:src => photo_url}
              %h3= person.name
              - if person.imported_from_provider == 'twitter' && person.imported_from_screen_name.present?
                %strong
                  = t('people.list.on_twitter', :link => twitter_link(person.imported_from_screen_name)).html_safe
              %p.location= person.location
              %p.bio= person.bio
              - if !person.new_record?
                .existing_user_label
                  = t('people.new.name_knows_known', :name => SETTINGS['organization']['name'], :known => person.name)
              - else
                = form_for person, :html => { :id => "#{person.imported_from_provider}_#{person.imported_from_id}_form"} do |f|
                  - [ :name,
                      :bio,
                      :location,
                      :photo_import_url,
                      :imported_from_provider,
                      :imported_from_id,
                      :url].each do |attribute|
                    = f.hidden_field attribute,
                      :id => "#{person.imported_from_provider}_#{person.imported_from_id}_#{attribute}"
                  =submit_tag t('people.new.submit', :name => person.name)
